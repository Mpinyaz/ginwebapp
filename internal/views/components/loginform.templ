package components

import "github.com/Mpinyaz/GinWebApp/internal/views"
import "github.com/Mpinyaz/GinWebApp/internal/dtos"

templ LogInForm(formData dtos.FormData) {
	<section
		class="min-h-screen bg-gradient-to-br from-orange-400 via-orange-500 to-red-500 flex items-center justify-center px-4 py-8"
		id="loginform"
	>
		<div class="w-full max-w-md">
			<div class="bg-white/95 backdrop-blur-sm rounded-2xl shadow-2xl p-8 border border-white/20">
				<div class="text-center mb-8">
					<h1 class="text-3xl font-bold text-gray-800 mb-2">Log In</h1>
				</div>
				if views.HasFormError(formData, "form") {
					<div class="mb-6 p-4 bg-red-50 border border-red-900 rounded-lg">
						<div class="flex items-start">
							<svg
								class="h-5 w-5 text-red-400 mr-2 mt-0.5 flex-shrink-0"
								viewBox="0 0 20 20"
								fill="currentColor"
							>
								<path
									fill-rule="evenodd"
									d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
									clip-rule="evenodd"
								></path>
							</svg>
							<div class="font-medium text-red-800 px-5">
								for _, error := range views.GetFormErrors(formData, "form") {
									<div class="mb-1 last:mb-0">{ error }</div>
								}
							</div>
						</div>
					</div>
				}
				<form
					hx-post="/api/auth/login"
					hx-target="#loginform"
					hx-target-error="#loginform"
					hx-swap="outerHTML"
					hx-trigger="submit"
					class="space-y-6"
				>
					<div class="flex flex-col">
						<label for="username" class="block text-sm font-semibold text-gray-700 mb-2">
							<p class="text-gray-600 text-center text-2xl font-bold mb-3">
								Your Back Yay!
							</p>
						</label>
						<input
							type="text"
							name="identifier"
							id="identifier"
							placeholder="Please enter your email or username"
							value={ views.GetFormValue(formData, "identifier") }
							required
							class={ views.InputStyle(formData, "identifier") }
						/>
						if views.HasFormError(formData, "identifier") {
							<ul class="mt-1 text-sm text-red-600 list-disc px-5">
								for _, error := range views.GetFormErrors(formData, "identifier") {
									<li class="mb-1 last:mb-0">{ error }</li>
								}
							</ul>
						}
					</div>
					<div class="flex flex-col">
						<label for="password" class="block text-sm font-semibold text-gray-700 mb-2">
							Password
						</label>
						<input
							type="password"
							name="password"
							id="password"
							placeholder="Enter Password"
							required
							class={ views.InputStyle(formData, "password") }
						/>
						if views.HasFormError(formData, "password") {
							<ul class="mt-1 text-sm text-red-600 list-disc px-5">
								for _, error := range views.GetFormErrors(formData, "password") {
									<li class="mb-1 last:mb-0">{ error }</li>
								}
							</ul>
						}
					</div>
					<button
						type="submit"
						class="w-full bg-gradient-to-r from-orange-500 to-red-500 hover:from-orange-600 hover:to-red-600 text-white font-semibold py-3 px-6 rounded-xl transition-all duration-200 transform hover:scale-[1.02] focus:ring-4 focus:ring-orange-500/30 focus:outline-none shadow-lg hover:shadow-xl"
					>
						Log In
					</button>
				</form>
				<div class="mt-8 text-center">
					<div class="text-gray-600">
						Dont have an account?
						<a
							href="/register"
							hx-boost="true"
							class="font-semibold text-orange-600 hover:text-orange-700 transition-colors duration-200 ml-1 hover:underline"
						>
							Register Here!
						</a>
					</div>
				</div>
			</div>
		</div>
	</section>
}
