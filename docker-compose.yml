version: "3.8"
services:
  postgres:
    image: postgres:15
    container_name: gin-postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${PSQL_USER}
      POSTGRES_PASSWORD: ${PSQL_PASSWORD}
      POSTGRES_DB: ${PSQL_DBNAME}
    ports:
      - "${PSQL_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PSQL_USER} -d ${PSQL_DBNAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: gin-pgadmin
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: gin-redis
    env_file:
      - .env
    command: >
      sh -c '
        if [ -n "$$REDIS_PASSWORD" ]; then
          redis-server --requirepass "$$REDIS_PASSWORD"
        else
          redis-server
        fi
      '
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: >
        sh -c '
          if [ -n "$$REDIS_PASSWORD" ]; then
            redis-cli -a "$$REDIS_PASSWORD" ping
          else
            redis-cli ping
          fi
        '
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:

networks:
  app-network:
    driver: bridge
